openapi: 3.0.4
info:
  title: "YieldInsights ${VERSION_APP}"
  description: This is a place where sellers and buyers meat each other
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: deposit
    description: Депозит
paths:
  /deposit/create:
    post:
      tags:
        - deposit
      summary: Create deposit
      operationId: depositCreate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositCreateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositCreateResponse'
  /deposit/read:
    post:
      tags:
        - deposit
      summary: Read deposit
      operationId: depositRead
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositReadRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositReadResponse'
  /deposit/update:
    post:
      tags:
        - deposit
      summary: Update deposit
      operationId: depositUpdate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositUpdateResponse'
  /deposit/delete:
    post:
      tags:
        - deposit
      summary: Delete deposit
      operationId: depositDelete
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDeleteResponse'
  /deposit/search:
    post:
      tags:
        - deposit
      summary: Search deposit
      operationId: depositSearch
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositSearchRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositSearchResponse'
  /deposit/offers:
    post:
      tags:
        - deposit
      summary: Search offers
      operationId: depositOffers
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositOffersRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositOffersResponse'

components:
  schemas:

    IRequest:
      type: object
      description: Базовый интерфейс для всех запросов
      properties:
        requestType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/DepositCreateRequest'
          read: '#/components/schemas/DepositReadRequest'
          update: '#/components/schemas/DepositUpdateRequest'
          delete: '#/components/schemas/DepositDeleteRequest'
          search: '#/components/schemas/DepositSearchRequest'
          offers: '#/components/schemas/DepositOffersRequest'

    Error:
      type: object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    ResponseResult:
      type: string
      enum:
        - success
        - error

    IResponse:
      type: object
      description: Базовый интерфейс для всех ответов
      properties:
        responseType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        result:
          $ref: '#/components/schemas/ResponseResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'

      discriminator:
        propertyName: responseType
        mapping:
          create: '#/components/schemas/DepositCreateResponse'
          read: '#/components/schemas/DepositReadResponse'
          update: '#/components/schemas/DepositUpdateResponse'
          delete: '#/components/schemas/DepositDeleteResponse'
          search: '#/components/schemas/DepositSearchResponse'
          offers: '#/components/schemas/DepositOffersResponse'
          init: '#/components/schemas/DepositInitResponse'

    UserId:
      type: string
      description: Идентификатор пользователя
    AdId:
      type: string
      description: Идентификатор объявления
    AdLock:
      type: string
      description: Версия оптимистичной блокировки

    BaseAd:
      type: object
      description: Объект описывает свойства, одинаковые для create и update
      properties:
        title:
          type: string
          description: Заголовок объявления
        description:
          type: string
          description: Описание объявления
        adType:
          $ref: '#/components/schemas/DealSide'
        visibility:
          $ref: '#/components/schemas/AdVisibility'

    DealSide:
      type: string
      description: 'Сторона сделки: спрос или предложение'
      enum:
        - demand
        - supply

    AdVisibility:
      type: string
      description: 'Тип видимости объявления. Возможные значения: видит только владелец, только зарегистрированный в системе пользователь, видимо всем'
      enum:
        - ownerOnly
        - registeredOnly
        - public

    AdInitResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'

    AdCreateObject:
      allOf:
        - $ref: '#/components/schemas/BaseAd'

    AdCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            ad:
              $ref: '#/components/schemas/AdCreateObject'

    AdReadObject:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/AdId'

    AdReadRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            ad:
              $ref: '#/components/schemas/AdReadObject'

    AdUpdateObject:
      allOf:
        - $ref: '#/components/schemas/BaseAd'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/AdId'
            lock:
              $ref: '#/components/schemas/AdLock'

    AdUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            ad:
              $ref: '#/components/schemas/AdUpdateObject'

    AdDeleteObject:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/AdId'
            lock:
              $ref: '#/components/schemas/AdLock'

    AdDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            ad:
              $ref: '#/components/schemas/AdDeleteObject'

    AdSearchFilter:
      type: object
      description: Набор фильтров для поиска
      properties:
        searchString:
          type: string
          description: Поисковая строка, которая будет искаться в объявлениях

    AdSearchRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            adFilter:
              $ref: '#/components/schemas/AdSearchFilter'

    AdOffersObject:
      $ref: '#/components/schemas/AdReadObject'

    AdOffersRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            ad:
              $ref: '#/components/schemas/AdOffersObject'

    AdResponseObject:
      allOf:
        - $ref: '#/components/schemas/BaseAd'
        - type: object
          description: Объект, который возвращается в ответе бэкенда
          properties:
            id:
              $ref: '#/components/schemas/AdId'
            ownerId:
              $ref: '#/components/schemas/UserId'
            lock:
              $ref: '#/components/schemas/AdLock'
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/AdPermissions'

    AdPermissions:
      type: string
      description: Доступы для клиента для операций над объявлением
      enum:
        - read
        - update
        - delete
        - makeVisiblePublic
        - makeVisibleOwn
        - makeVisibleGroup

    AdResponseSingle:
      allOf:
        - type: object
          description: Ответ с одним объектом объявления
          properties:
            ad:
              $ref: '#/components/schemas/AdResponseObject'

    AdResponseMulti:
      allOf:
        - type: object
          description: Список найденных объектов
          properties:
            ads:
              type: array
              items:
                $ref: '#/components/schemas/AdResponseObject'

    AdCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdReadResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdSearchResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseMulti'

    AdOffersResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'
        - $ref: '#/components/schemas/AdResponseMulti'

    # STUBS ======================
    AdRequestDebugMode:
      type: string
      enum:
        - prod
        - test
        - stub

    AdRequestDebug:
      type: object
      properties:
        debug:
          $ref: '#/components/schemas/AdDebug'

    AdDebug:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AdRequestDebugMode'
        stub:
          $ref: '#/components/schemas/AdRequestDebugStubs'

    AdRequestDebugStubs:
      type: string
      description: Перечисления всех стабов
      enum:
        - success
        - notFound
        - badId
        - badTitle
        - badDescription
        - badVisibility
        - cannotDelete
        - badSearchString

